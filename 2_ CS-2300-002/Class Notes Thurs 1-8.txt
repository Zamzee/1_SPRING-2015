/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CONDITIONAL
===========

Conditional from p -> q
=======================

P:// If it is sunny, then Q://I will go swimming.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Converse q -> p is the converse of p -> q
=========================================

If I go swimming, then it is sunny.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Contrapositive*  -|q -> -|p is the contrapositive of p -> q
===========================================================

If I don't go swimming, then it is not sunny.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Inverse -|p -> -|q is the inverse of p -> q
============================================

If it is not sunny, then I won't go swimming.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BICONDITIONAL
=============
p if and only if q

(p -> q) /\ (q -> p)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Truth Tables for Compound Propositions
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Construction of Truth Table
Rows-
Columns-

Truth Table Example
===================
Construct a Truth Table for p \/ q -> -|r
==========================================

	=================================================================================================
	p	|	q	|	r	|	-|r	|	p \/ q	|	p \/ q -> -|r	|					=================================================================================================
1)	T	| 	T	| 	T	|	F	|	T	|		F	|
	=================================================================================================
2)	T	|	T	|	F	|		|		|			|
	=================================================================================================
3)	T	|	F	|	T	|		|		|			|
	=================================================================================================
4)	T	|	F	|		|		|		|			|
	=================================================================================================
5)	F	|	T	|		|		|		|			|
	=================================================================================================
6)	F	|	F	|		|		|		|			|
	=================================================================================================
7)	F	|	T	|		|		|		|			|
	=================================================================================================
8)	F	|	F	|		|		|		|			|
	=================================================================================================

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


EQUIVALENT PROPOSITIONS
=======================

-Two Propositions are equivalent if... (they are exactly the same for every row and column?)

USING A TRUTH TABLE TO SHOW NON-EQUIVALENCE
-example- show using truth tables that neith the converse nor the inverse of the (conditional?) ...

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PRECEDENCE OF LOGICAL OPERATORS
===============================

=================================================
OPERATOR | PRECEDENCE	|	STATEMENT NAME	|
=================================================
-|	|	1	|	NOT		|
=================================================
/\	|	2	|	AND		|
=================================================
\/	|	3	|	OR		|
=================================================
->	|	4	|	IF -> THEN	|
=================================================
<->	|	5	|	IF and ONLY IF	|
=================================================

* p \/ q -> -|r is equivalent to (p \/ q) -> -|r

* If the intended meaning is p \/ (q -> -| r) ,
  then parentheses must be used.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////















