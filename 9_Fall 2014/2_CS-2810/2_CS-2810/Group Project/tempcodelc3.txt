;BinarytoASCII AND R5, R5, #0
;LD R5, PosASCIIOffset
;ADD R0, R0, R5
;Begin10 LD R4, Neg10; Determine 10's digit
;Loop10 R5, R3, R
;BRn End10
;ADD R5, R5, #1
;BRnzp Loop10
;
;End10 LD R4, R1, #2; Store ASCII code for tens digit
;ADD R0, R0, #10; Correct R0 for one-too-many subtracts
;Begin1 LD R4, PosASCIIOffset; Prepare for "ones" digit
;ADD R5, R5, R2
;LD R2, R1, #3
;RET


GoOpSubtract
;OUT
;BRnzp Exit
;LD R4, ASCIINegSign
;AND R5, R5, #0
;ADD R5, R5, R0
;AND R0, R0, #0
;ADD R0, R0, R4
;OUT
;AND R0, R0, #0
;ADD R0, R5, R0

Subtract Subroutine
;ADD R2, R2, R3
;ADD R5, R2, R2; Save double input value in R5 for later ASCII conversion